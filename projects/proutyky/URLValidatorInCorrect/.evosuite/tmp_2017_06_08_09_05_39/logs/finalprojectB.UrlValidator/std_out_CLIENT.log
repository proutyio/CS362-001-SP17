* Starting client
* Connecting to master process on port 7660
* Analyzing classpath: 
  - /home/r00t/Desktop/FinalProject/URLValidatorInCorrect/target/classes
  - /home/r00t/.m2/repository/junit/junit/4.12/junit-4.12.jar
  - /home/r00t/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar
* Finished analyzing classpath
* Generating tests for class finalprojectB.UrlValidator
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 95
  - Branch 86
  - Exception 0
  - MutationFactory 281
  - Output 17
  - Method 14
  - MethodNoException 14
  - CBranchFitnessFactory 86
* Using seed 1496937941690
* Starting evolution
* Search finished after 105s and 72 generations, 33126 statements, best individual has fitness: 292.5596590825272
* Writing sequences to pool
* Minimizing test suite
[MASTER] 09:07:46.734 [pool-2-thread-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 67%
* Total number of goals: 95
* Number of covered goals: 64
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 62%
* Total number of goals: 86
* Number of covered goals: 53
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 51%
* Total number of goals: 281
* Number of covered goals: 143
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 82%
* Total number of goals: 17
* Number of covered goals: 14
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 62%
* Total number of goals: 86
* Number of covered goals: 53
* Generated 20 tests with total length 166
* Resulting test suite's coverage: 78% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 13%
* Compiling and checking tests
[MASTER] 09:08:07.061 [pool-2-thread-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalStateException
[MASTER] 09:08:07.061 [pool-2-thread-1] WARN  JUnitAnalyzer - Failing test: UrlValidator urlValidator0 = new UrlValidator((-1306L));
urlValidator0.isValidPath((String) null);
urlValidator0.isValidScheme((String) null);
urlValidator0.isValidPath((String) null);
urlValidator0.isValidScheme("http");
String string0 = null;
urlValidator0.isValidAuthority((String) null);
urlValidator0.isValidPath("^p{ASCII}+$");
urlValidator0.isValidQuery("x+Tv+5OOs~AaOArg");
String[] stringArray0 = new String[9];
stringArray0[2] = null;
stringArray0[4] = "^p{ASCII}+$";
stringArray0[5] = "ID!7,n";
stringArray0[6] = "x+Tv+5OOs~AaOArg";
stringArray0[7] = null;
stringArray0[1] = null;
RegexValidator regexValidator0 = new RegexValidator("x+Tv+5OOs~AaOArg");
regexValidator0.toString();
regexValidator0.toString();
UrlValidator urlValidator1 = new UrlValidator(stringArray0, regexValidator0, 62L);
urlValidator1.isValidAuthority("file");

[MASTER] 09:08:07.193 [pool-2-thread-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalStateException
[MASTER] 09:08:07.193 [pool-2-thread-1] WARN  JUnitAnalyzer - Failing test: UrlValidator urlValidator0 = new UrlValidator((-1995L));
UrlValidator urlValidator1 = new UrlValidator((String[]) null);
UrlValidator urlValidator2 = new UrlValidator((String[]) null);
urlValidator1.isValidQuery("QwKbne%YK");
urlValidator1.isValidFragment("rwG7iA.Z?.wqzWXz");
RegexValidator regexValidator0 = new RegexValidator("rwG7iA.Z?.wqzWXz", false);
UrlValidator urlValidator3 = new UrlValidator(regexValidator0, (-1094L));
UrlValidator urlValidator4 = new UrlValidator((-1094L));
urlValidator0.isValidAuthority("");

[MASTER] 09:08:07.248 [pool-2-thread-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalStateException
[MASTER] 09:08:07.248 [pool-2-thread-1] WARN  JUnitAnalyzer - Failing test: String[] stringArray0 = new String[8];
String string0 = ",";
stringArray0[0] = ",";
UrlValidator urlValidator0 = new UrlValidator(stringArray0);
urlValidator0.isValidScheme("3hc3@");
urlValidator0.isValidPath(",");
urlValidator0.isValidQuery((String) null);
urlValidator0.isValid(",");

[MASTER] 09:08:07.950 [pool-2-thread-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalStateException
[MASTER] 09:08:07.951 [pool-2-thread-1] WARN  JUnitAnalyzer - Failing test: String string0 = "at";
RegexValidator regexValidator0 = new RegexValidator("at", false);
regexValidator0.match("at");
regexValidator0.validate("at");
regexValidator0.toString();
UrlValidator urlValidator0 = new UrlValidator(regexValidator0, 3508L);
urlValidator0.isValidPath("http");
urlValidator0.isValidPath("");
urlValidator0.isValidAuthority("at");
urlValidator0.isValidQuery("ZQCtfEpeWR");
urlValidator0.isValidPath("an");
urlValidator0.isValid("ar");

[MASTER] 09:08:07.998 [pool-2-thread-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalStateException
[MASTER] 09:08:07.998 [pool-2-thread-1] WARN  JUnitAnalyzer - Failing test: UrlValidator urlValidator0 = UrlValidator.getInstance();
UrlValidator urlValidator1 = new UrlValidator();
urlValidator0.isValidScheme("bt");
urlValidator0.countToken("eX&vrZ/I3", "org");
UrlValidator.getInstance();
urlValidator0.isValid("eX&vrZ/I3");

[MASTER] 09:08:08.280 [pool-2-thread-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NullPointerException
[MASTER] 09:08:08.280 [pool-2-thread-1] WARN  JUnitAnalyzer - Failing test: String[] stringArray0 = new String[11];
stringArray0[0] = "ao";
UrlValidator urlValidator0 = new UrlValidator(stringArray0);
urlValidator0.isValidScheme("gi");

[MASTER] 09:08:08.636 [pool-2-thread-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NullPointerException
[MASTER] 09:08:08.637 [pool-2-thread-1] WARN  JUnitAnalyzer - Failing test: String[] stringArray0 = new String[14];
stringArray0[0] = "N(R_9J6<TN";
stringArray0[1] = "<B0QD$r";
UrlValidator urlValidator0 = new UrlValidator(stringArray0, (-780L));
urlValidator0.isValidScheme("eu");

* Writing JUnit test case 'UrlValidator_ESTest' to /home/r00t/Desktop/FinalProject/URLValidatorInCorrect/.evosuite/tmp_2017_06_08_09_05_39/tests
* Done!


/*
 * This file was automatically generated by EvoSuite
 * Thu Jun 08 16:09:31 GMT 2017
 */

package finalprojectB;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import finalprojectB.RegexValidator;
import java.util.regex.PatternSyntaxException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RegexValidator_ESTest extends RegexValidator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "57!D";
      stringArray0[1] = "N!,AfMLrw^";
      RegexValidator regexValidator0 = new RegexValidator(stringArray0, false);
      String[] stringArray1 = regexValidator0.match("N!,AfMLrw^");
      assertNotSame(stringArray0, stringArray1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "RegexValidator{] is missing}";
      RegexValidator regexValidator0 = null;
      try {
        regexValidator0 = new RegexValidator(stringArray0);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Illegal repetition near index 13
         // RegexValidator{] is missing}
         //              ^
         //
         assertThrownBy("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RegexValidator regexValidator0 = null;
      try {
        regexValidator0 = new RegexValidator("_gf`ZR{", true);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Illegal repetition near index 5
         // _gf`ZR{
         //      ^
         //
         assertThrownBy("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RegexValidator regexValidator0 = null;
      try {
        regexValidator0 = new RegexValidator("e\"##9(sF");
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unclosed group near index 9
         // e\"##9(sF
         //          ^
         //
         assertThrownBy("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RegexValidator regexValidator0 = null;
      try {
        regexValidator0 = new RegexValidator("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Regular expression[0] is missing
         //
         assertThrownBy("finalprojectB.RegexValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[2];
      RegexValidator regexValidator0 = null;
      try {
        regexValidator0 = new RegexValidator(stringArray0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Regular expression[0] is missing
         //
         assertThrownBy("finalprojectB.RegexValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RegexValidator regexValidator0 = null;
      try {
        regexValidator0 = new RegexValidator((String[]) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Regular expressions are missing
         //
         assertThrownBy("finalprojectB.RegexValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RegexValidator regexValidator0 = new RegexValidator("8.jY#", true);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "57!D";
      stringArray0[1] = "N!,AfMLrw^";
      RegexValidator regexValidator0 = new RegexValidator(stringArray0, false);
      String string0 = regexValidator0.toString();
      assertEquals("RegexValidator{57!D,N!,AfMLrw^}", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RegexValidator regexValidator0 = new RegexValidator("tUd<\"sG");
      String string0 = regexValidator0.validate("m.kc");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RegexValidator regexValidator0 = new RegexValidator("tUd<\"sG");
      String string0 = regexValidator0.validate((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "N5!,AfMLrw^";
      stringArray0[1] = "28";
      RegexValidator regexValidator0 = new RegexValidator(stringArray0);
      String string0 = regexValidator0.validate("28");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "N5!,AfMLrw^";
      stringArray0[1] = "28";
      RegexValidator regexValidator0 = new RegexValidator(stringArray0);
      String[] stringArray1 = regexValidator0.match("");
      assertNull(stringArray1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RegexValidator regexValidator0 = new RegexValidator("tUd<\"sG");
      String[] stringArray0 = regexValidator0.match((String) null);
      assertNull(stringArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RegexValidator regexValidator0 = new RegexValidator("tUd<\"sG");
      boolean boolean0 = regexValidator0.isValid("m.kc");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RegexValidator regexValidator0 = new RegexValidator("tUd<\"sG");
      boolean boolean0 = regexValidator0.isValid((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "57!D";
      stringArray0[1] = "N!,AfMLrw^";
      RegexValidator regexValidator0 = new RegexValidator(stringArray0, false);
      boolean boolean0 = regexValidator0.isValid("N!,AfMLrw^");
      //  // Unstable assertion: assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      RegexValidator regexValidator0 = null;
      try {
        regexValidator0 = new RegexValidator(stringArray0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Regular expression[0] is missing
         //
         assertThrownBy("finalprojectB.RegexValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RegexValidator regexValidator0 = null;
      try {
        regexValidator0 = new RegexValidator((String) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Regular expression[0] is missing
         //
         assertThrownBy("finalprojectB.RegexValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RegexValidator regexValidator0 = new RegexValidator("Regul^r xpr]ssion are m3ssig");
      String[] stringArray0 = regexValidator0.match("Regul^r xpr]ssion are m3ssig");
      RegexValidator regexValidator1 = null;
      try {
        regexValidator1 = new RegexValidator(stringArray0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Regular expressions are missing
         //
         assertThrownBy("finalprojectB.RegexValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RegexValidator regexValidator0 = null;
      try {
        regexValidator0 = new RegexValidator((String[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Regular expressions are missing
         //
         assertThrownBy("finalprojectB.RegexValidator", e);
      }
  }
}
